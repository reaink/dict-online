datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "extendedIndexes"]
}

/// Casbin权限记录
model CasbinRule {
  id    Int     @id @default(autoincrement())
  ptype String
  v0    String?
  v1    String?
  v2    String?
  v3    String?
  v4    String?
  v5    String?

  @@map("casbin_rule")
}

/// 用户注册类型
enum SignUpType {
  USERNAME
  WECHAT
}

enum UserStatus {
  ENABLE
  DISABLE
}

/// 用户
model User {
  id         Int        @id @default(autoincrement())
  createAt   DateTime   @default(now())
  updateAt   DateTime   @updatedAt
  name       String?    @unique
  nickname   String?
  password   String?
  phone      String?
  status     UserStatus @default(ENABLE)
  roles      Role[]
  signUpType SignUpType @default(WECHAT)
  wechat     Wechat?    @relation(fields: [wechatId], references: [id], onDelete: Cascade)
  wechatId   Int?       @unique
  notice     Notice[]
  phrase     Phrase[]
}

/// 词条类型
enum PhraseType {
  /// 单字
  Single
  /// 词组
  Phrase
  /// 短句
  Sentence
  /// 符号
  Symbol
  /// 链接
  Link
  /// 诗句
  Poem
  /// 其他
  Other
}

/// 词条
model Phrase {
  id       Int        @id @default(autoincrement())
  createAt DateTime   @default(now())
  updateAt DateTime   @updatedAt
  /// 词条
  word     String
  /// 编码
  code     String
  /// 类型
  type     PhraseType
  /// 词频
  index    Int
  /// 评论
  comments Comment[]
  /// 发起人
  user     User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
}

/// 词组-评论
model Comment {
  id        Int       @id @default(autoincrement())
  createAt  DateTime  @default(now())
  content   String
  phrase    Phrase?   @relation(fields: [phraseId], references: [id])
  phraseId  Int?
  comments  Comment[] @relation("CommentToComment")
  comment   Comment?  @relation("CommentToComment", fields: [commentId], references: [id])
  commentId Int?
}

/// 权限-角色
model Role {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  value    String   @unique
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  users    User[]
}

/// 微信
model Wechat {
  id        Int      @id @default(autoincrement())
  openid    String   @unique
  unionid   String?  @unique
  avatarUrl String?
  city      String?
  country   String?
  gender    Int?     @db.SmallInt
  language  String?
  nickName  String?
  province  String?
  user      User?
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
}

/// 通知
model Notice {
  id        Int       @id @default(autoincrement())
  title     String    @unique
  content   String
  createdAt DateTime  @default(now())
  publishAt DateTime?
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
}

/// 权限-权限
model Permission {
  id      Int                @id @default(autoincrement())
  name    String             @unique
  value   String             @unique
  actions PermissionAction[]
}

/// 权限-权限操作
model PermissionAction {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  value       String       @unique
  permissions Permission[]
}
